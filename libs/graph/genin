#!/bin/python3
import matplotlib.pyplot as plt
import networkx as nx
import random
import os

def colors(name):
  if name == "BLUE":
    return "#b0e0e6"
  elif name == "GREEN":
    return "#98fb98"
  elif name == "RED":
    return "#f08080"
  elif name == "GRAY":
    return "#CCCCCC"
  elif name == "BLACK":
    return "#000000"
  elif name == "RAND":
    return rand_col()
  elif str.isdigit(name):
    return rand_col(int(name))
  elif name == "-1":
    return rand_col(-1)

def rand_col(seed=random.randint(1, 50)):
  return '#{:02x}{:02x}{:02x}'.format(seed%6*40, seed%10*20, seed%4*60)


######
# main

CWD=os.getcwd()
PR=os.path.basename(CWD)

num_file = open(f"{CWD}/randset_{PR}/num", "a+")
input_file = open(f"{CWD}/input.txt", "w+")

num_file.seek(0)
num_line = num_file.readline().split()
num = (int(num_line[0]) if len(num_line) > 0 else 0)+1
num_file.seek(0)
num_file.truncate()
num_file.write(str(num))
num_file.close()

n = random.randint(5, 15)
m = random.randint(int(1.4*n), 2*n)


## visual check
c='n'
while c !='y':
  G = nx.gnm_random_graph(n, m)
  nx.draw_kamada_kawai(G, node_color=[colors("GREEN") for _ in list(G)])
  
  ### print and show
  plt.savefig(f"randset_{PR}/plt/rplt{num}")
  plt.close()
  os.system(f"code randset_{PR}/plt/rplt{num}.png")
  
  ### user response
  c = input()
  if c == 'q':
    raise Exception


## write input_file
input_file.write(str(n)+" "+str(m)+"\n")
for (u, v, data) in G.edges(data=True):
  input_file.write(str(u)+" "+str(v)+" "+"\n")


input_file.close()

os.system(f"cp input.txt randset_{PR}/input/rinput{num}.txt")
